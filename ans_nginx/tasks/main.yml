---

- name: Install des dependances
  apt:
    name: 'python-passlib'
    state: 'present'
  when: nginx_basic_auth

- name: Installation nginx
  apt:
    name: 'nginx'
    state: 'present'
  when: nginx_install_service
  notify:
    - Test nginx puis restart

- name: Creation des repertoires nginx 
  file:
    path: '{{ item }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items:
    - '/usr/share/nginx/html'
    - '{{ nginx_letsencrypt_root }}'
    - '/etc/nginx/sites-available'
    - '/etc/nginx/sites-enabled'
    - '/etc/nginx/conf.d'
    - '/etc/nginx/ssl'

- name: Suppression du site default
  file:
    path: '{{ item }}'
    state: 'absent'
  with_items:
    - '/var/www/html'
    - '/etc/nginx/sites-enabled/default'
    - '/etc/nginx/sites-available/default'
  notify:
    - Test puis relance de nginx

- name: Configuration nginx
  template:
    src: 'etc/nginx/nginx.conf.j2'
    dest: '/etc/nginx/nginx.conf'
    group: 'root'
    owner: 'root'
    mode: '0644'
  register: nginx_register_nginx_config
  notify:
    - Test puis reload de nginx

- name: Generation des certificats SSL
  command: >
    openssl req
      -new
      -newkey rsa:4096
      -days 365
      -nodes
      -x509
      -subj "/C=US/ST=NY/L=NY/O=NA/CN=localhost"
      -keyout /etc/nginx/ssl/{{ nginx_ssl_override_filename | default(item.value.domains[0]) }}.key
      -out /etc/nginx/ssl/{{ nginx_ssl_override_filename | default(item.value.domains[0]) }}.pem
  args:
    creates: '/etc/nginx/ssl/{{ nginx_ssl_override_filename | default(item.value.domains[0]) }}.pem'
  with_dict: '{{ nginx_sites }}'
  when: nginx_ssl_generate_self_signed_certs
  notify:
    - Test puis restart nginx

- name: Generation du fichier dhparam.pem 
  command: openssl dhparam -out /etc/nginx/ssl/dhparam.pem {{ nginx_ssl_dhparam_bits }}
  args:
    creates: '/etc/nginx/ssl/dhparam.pem'
  notify:
    - Test puis restart nginx

- name: Creation des entrees basic auth 
  htpasswd:
    path: '/etc/nginx/.htpasswd'
    name: '{{ item.user }}'
    password: '{{ item.password }}'
    crypt_scheme: 'sha512_crypt'
    group: 'root'
    owner: 'root'
    mode: '0644'
  with_items: '{{ nginx_basic_auth }}'

- name: Configuration partie sites-enabled
  template:
    src: 'etc/nginx/sites-available/default.conf.j2'
    dest: '/etc/nginx/sites-available/{{ item.key }}.conf'
    group: 'root'
    owner: 'root'
    mode: '0644'
  with_dict: '{{ nginx_sites }}'
  register: nginx_register_vhost_config
  notify:
    - Test puis relance nginx 

- name: Symlink des sites-available vers sites-enabled
  file:
    src: '/etc/nginx/sites-available/{{ item.key }}.conf'
    dest: '/etc/nginx/sites-enabled/{{ item.key }}.conf'
    state: 'link'
  with_dict: '{{ nginx_sites }}'
  notify:
    - Test puis restart nginx

- name: Force du restart nginx
  service:
    name: 'nginx'
    state: 'restarted'
  when: (nginx_register_nginx_config | changed) and (nginx_register_vhost_config | changed)
